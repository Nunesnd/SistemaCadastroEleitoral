// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaCadastroEleitoral.Infraestrutura.Data;

#nullable disable

namespace SistemaCadastroEleitoral.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20230508162227_AutomatizarCampoDataObservacao")]
    partial class AutomatizarCampoDataObservacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Admin.AdminModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAdmin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Apelido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Filhos")
                        .HasColumnType("bit");

                    b.Property<string>("Fone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nascimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Cadastros");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Contato.ContatoModel", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContato"), 1L, 1);

                    b.Property<string>("LinkContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeContato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cadastroId")
                        .HasColumnType("int");

                    b.HasKey("IdContato");

                    b.HasIndex("cadastroId");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Endereco.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CEP")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Número")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cadastroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cadastroId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Observacao.ObservacaoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataObservacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("cadastroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("cadastroId");

                    b.ToTable("Observacoes");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Profissao.ProfissaoModel", b =>
                {
                    b.Property<int>("IdProfissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProfissao"), 1L, 1);

                    b.Property<string>("NomeProfissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cadastroId")
                        .HasColumnType("int");

                    b.HasKey("IdProfissao");

                    b.HasIndex("cadastroId");

                    b.ToTable("Profissoes");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", b =>
                {
                    b.HasOne("SistemaCadastroEleitoral.Models.Admin.AdminModel", "Admin")
                        .WithMany("Cadastros")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Contato.ContatoModel", b =>
                {
                    b.HasOne("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", "Cadastro")
                        .WithMany("ContatosLinks")
                        .HasForeignKey("cadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Endereco.EnderecoModel", b =>
                {
                    b.HasOne("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", "Cadastro")
                        .WithMany("Enderecos")
                        .HasForeignKey("cadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Observacao.ObservacaoModel", b =>
                {
                    b.HasOne("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", "Cadastro")
                        .WithMany("Observacoes")
                        .HasForeignKey("cadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Profissao.ProfissaoModel", b =>
                {
                    b.HasOne("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", "Cadastro")
                        .WithMany("Profissoes")
                        .HasForeignKey("cadastroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Admin.AdminModel", b =>
                {
                    b.Navigation("Cadastros");
                });

            modelBuilder.Entity("SistemaCadastroEleitoral.Models.Cadastro.CadastroModel", b =>
                {
                    b.Navigation("ContatosLinks");

                    b.Navigation("Enderecos");

                    b.Navigation("Observacoes");

                    b.Navigation("Profissoes");
                });
#pragma warning restore 612, 618
        }
    }
}
